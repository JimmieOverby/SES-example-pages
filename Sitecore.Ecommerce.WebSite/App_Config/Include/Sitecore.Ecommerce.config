<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <commands>
      <command name="ordercatalog:changeorderstatus" type="Sitecore.Ecommerce.Shell.Applications.OrderCatalog.Commands.ChangeOrderStatus,Sitecore.Ecommerce.Shell"/>
      <command name="ordercatalog:editorder" type="Sitecore.Ecommerce.Shell.Applications.OrderCatalog.Commands.EditOrder,Sitecore.Ecommerce.Shell"/>
      <command name="ordercatalog:editorderlines" type="Sitecore.Ecommerce.Shell.Applications.OrderCatalog.Commands.EditOrderLines,Sitecore.Ecommerce.Shell"/>
    </commands>
    <events>
      <event name="item:moved">
        <handler type="Sitecore.Ecommerce.StructuredData.EnableStructuredDataModule, Sitecore.Ecommerce.Kernel" method="OnItemSaved" />
      </event>
      <event name="item:saved">
        <handler type="Sitecore.Ecommerce.StructuredData.EnableStructuredDataModule, Sitecore.Ecommerce.Kernel" method="OnItemSaved" />
        <handler type="Sitecore.Ecommerce.Unity.ClearSiteSettingsCacheEventHandler, Sitecore.Ecommerce.Kernel" method="OnItemSaved" />
        <handler type="Sitecore.Ecommerce.Catalogs.VirtualProductResolverCleaner, Sitecore.Ecommerce.Kernel" method="OnItemSaved" />
      </event>
    </events>
    <processors>
      <uiDeleteItems>
        <processor mode="on" type="Sitecore.Ecommerce.Orders.OrderItemEventHandler, Sitecore.Ecommerce.Kernel" patch:before="processor[@type='Sitecore.Shell.Framework.Pipelines.DeleteItems,Sitecore.Kernel' and @method='Execute']" method="OnItemDeleted" />
      </uiDeleteItems>
      <saveUI>
        <processor mode="on" type="Sitecore.Ecommerce.Orders.OrderItemEventHandler, Sitecore.Ecommerce.Kernel" patch:after="processor[@type='Sitecore.Pipelines.Save.Save, Sitecore.Kernel']" method="OnItemSaved"/>
      </saveUI>
      <uiDuplicateItem>
        <processor mode="on" type="Sitecore.Ecommerce.Orders.OrderItemEventHandler, Sitecore.Ecommerce.Kernel" patch:after="processor[@type='Sitecore.Shell.Framework.Pipelines.DuplicateItem, Sitecore.Kernel'  and @method='Execute']" method="OnItemDuplicated"/>
      </uiDuplicateItem>
      <uiCopyItems>
        <processor mode="on" type="Sitecore.Ecommerce.Orders.OrderItemEventHandler, Sitecore.Ecommerce.Kernel" patch:after="processor[@type='Sitecore.Shell.Framework.Pipelines.CopyItems,Sitecore.Kernel' and @method='Execute']" method="OnItemCopied" />
      </uiCopyItems>
    </processors>
    <xslExtensions>
      <extension mode="on" type="Sitecore.Ecommerce.Analytics.Components.Xsl.XslExtensions,Sitecore.Ecommerce.Analytics" namespace="http://www.sitecore.net/ecommerceanalytics" singleInstance="true" />
    </xslExtensions>
    <controlSources>
      <source mode="on" namespace="Sitecore.Ecommerce.SearchForms" folder="/sitecore modules/shell/Ecommerce" deep="true" prefix="ecommerce"/>
    </controlSources>
    <settings>
      <!--  Ecommerce.Product.BaseTemplateId
      -->
      <setting name="Ecommerce.Product.BaseTemplateId" value="{02870C17-4273-4242-89A4-E973C3CF8EC0}" />
      <!--  Ecommerce.Order.OrderItemTempalteID
      -->
      <setting name="Ecommerce.Order.OrderItemTempalteId" value="{2769D69F-E217-4C0A-A41F-2083EC165218}" />
      <!--  Ecommerce.Order.OrderLineItemTempalteID
      -->
      <setting name="Ecommerce.Order.OrderLineItemTempalteId" value="{9A0E680B-B84E-42F6-9E48-68878591705B}" />
      <!--  Ecommerce.Settings.SettingsRootTemplateId
      -->
      <setting name="Ecommerce.Settings.SettingsRootTemplateId" value="{AC4841C3-9B0E-4AFD-B14B-5F280E34FBD5}" />
      <!--  Ecommerce.Analytics.EventQueryStringKey
      -->
      <setting name="Ecommerce.Analytics.EventQueryStringKey" value="ec_trk" />
      <!--  Ecommerce.EnableStructuredDataModule
      -->
      <setting name="Ecommerce.EnableStructuredDataModule" value="true" />
      <!--  Query.MaxItems
            Specifies the max number of items in a query result set.
            If the number is 0, all items are returned. This may affect system performance, if a 
            large query result is returned.
            This also controls the number of items in Lookup, Multilist and Valuelookup fields.
            Default value: 100
      -->
      <setting name="Query.MaxItems" value="0" />
      <!-- Orders.OpenInNewWindow
           Specifies whether a new content editor window must be open when editing orders
      -->
      <setting name="Orders.OpenInNewWindow" value="false"/>
      <setting name="GridPageSize">
        <patch:attribute name="value">10</patch:attribute>
      </setting>
    </settings>
    <pipelines>
      <initialize>
        <!-- Processor initialize the Unity container configuration on the first start. -->
        <processor type="Sitecore.Ecommerce.Pipelines.Loader.ConfigureEntities, Sitecore.Ecommerce.Kernel" patch:after="processor[@type='Sitecore.Pipelines.Loader.EnsureAnonymousUsers, Sitecore.Kernel']">
          <UnityConfigSource>/App_Config/Unity.config</UnityConfigSource>
        </processor>
        <processor type="Sitecore.Ecommerce.Pipelines.Loader.ConfigureShopContainers, Sitecore.Ecommerce.Kernel" patch:after="processor[@type='Sitecore.Ecommerce.Pipelines.Loader.ConfigureEntities, Sitecore.Ecommerce.Kernel']" />
        <processor type="Sitecore.Ecommerce.Pipelines.Loader.RegisterEcommerceProviders, Sitecore.Ecommerce.Kernel" patch:after="processor[@type='Sitecore.Ecommerce.Pipelines.Loader.ConfigureEntities, Sitecore.Ecommerce.Kernel']" method="InitializePaymentSystemProvider"/>
        <processor type="Sitecore.Ecommerce.Pipelines.Loader.RegisterEcommerceProviders, Sitecore.Ecommerce.Kernel" patch:after="processor[@type='Sitecore.Ecommerce.Pipelines.Loader.ConfigureEntities, Sitecore.Ecommerce.Kernel']" method="InitializeShippingSystemProvider"/>
        <processor type="Sitecore.Ecommerce.Pipelines.Loader.RegisterEcommerceProviders, Sitecore.Ecommerce.Kernel" patch:after="processor[@type='Sitecore.Ecommerce.Pipelines.Loader.ConfigureEntities, Sitecore.Ecommerce.Kernel']" method="InitializeNotificationOptionProvider"/>
        <processor type="Sitecore.Ecommerce.Pipelines.Loader.RegisterEcommerceProviders, Sitecore.Ecommerce.Kernel" patch:after="processor[@type='Sitecore.Ecommerce.Pipelines.Loader.ConfigureEntities, Sitecore.Ecommerce.Kernel']" method="InitializeCountryProvider"/>
        <processor type="Sitecore.Ecommerce.Pipelines.Loader.RegisterEcommerceProviders, Sitecore.Ecommerce.Kernel" patch:after="processor[@type='Sitecore.Ecommerce.Pipelines.Loader.ConfigureEntities, Sitecore.Ecommerce.Kernel']" method="InitializeCurrencyProvider"/>
        <processor type="Sitecore.Ecommerce.Pipelines.Loader.RegisterEcommerceProviders, Sitecore.Ecommerce.Kernel" patch:after="processor[@type='Sitecore.Ecommerce.Pipelines.Loader.ConfigureEntities, Sitecore.Ecommerce.Kernel']" method="InitializeVatRegionProvider"/>
        <processor type="Sitecore.Ecommerce.Pipelines.Loader.RegisterEcommerceProviders, Sitecore.Ecommerce.Kernel" patch:after="processor[@type='Sitecore.Ecommerce.Pipelines.Loader.ConfigureEntities, Sitecore.Ecommerce.Kernel']" method="InitializeOrderStatusProvider"/>
        <processor type="Sitecore.Ecommerce.Pipelines.Loader.RegisterEcommerceProviders, Sitecore.Ecommerce.Kernel" patch:after="processor[@type='Sitecore.Ecommerce.Pipelines.Loader.ConfigureEntities, Sitecore.Ecommerce.Kernel']" method="InitializeBusinessCatalogProviders"/>
      </initialize>
      <preprocessRequest>
        <processor type="Sitecore.Pipelines.PreprocessRequest.FilterUrlExtensions, Sitecore.Kernel">
          <param desc="Allowed extensions (comma separated)">aspx, ashx, asmx, svc</param>
        </processor>
      </preprocessRequest>
      <httpRequestBegin>
        <processor type="Sitecore.Ecommerce.Pipelines.HttpRequest.ProductResolver, Sitecore.Ecommerce.Kernel" patch:after="*[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']"  />
        <processor type="Sitecore.Ecommerce.Pipelines.HttpRequest.CreateRequestContainer, Sitecore.Ecommerce.Kernel" patch:after="*[@type='Sitecore.Pipelines.HttpRequest.SiteResolver, Sitecore.Kernel']" />
        <processor type="Sitecore.Ecommerce.Shell.Pipelines.HttpRequest.ShellShopResolver, Sitecore.Ecommerce.Shell" patch:after="*[@type='Sitecore.Ecommerce.Pipelines.HttpRequest.CreateRequestContainer, Sitecore.Ecommerce.Kernel']" />
      </httpRequestBegin>
      <httpRequestEnd>
        <processor type="Sitecore.Ecommerce.Pipelines.HttpRequest.DisposeRequestContainer, Sitecore.Ecommerce.Kernel" />
      </httpRequestEnd>
      <getConfiguration>
        <processor type="Sitecore.Ecommerce.Pipelines.GetConfiguration.GetFromContextSite, Sitecore.Ecommerce.Kernel" />
        <processor type="Sitecore.Ecommerce.Pipelines.GetConfiguration.GetFromWebSite, Sitecore.Ecommerce.Kernel" />
        <processor type="Sitecore.Ecommerce.Pipelines.GetConfiguration.GetFromLinkManager, Sitecore.Ecommerce.Kernel" />
        <processor type="Sitecore.Ecommerce.Pipelines.GetConfiguration.GetFromResolver, Sitecore.Ecommerce.Kernel" />
      </getConfiguration>
      <startTracking>
        <processor patch:after="*[@type='Sitecore.Analytics.Pipelines.StartTracking.ProcessQueryString,Sitecore.Analytics']" type="Sitecore.Ecommerce.Analytics.Pipelines.StartTracking.ProcessQueryString, Sitecore.Ecommerce.Analytics"/>
      </startTracking>
      <orderCreated>
        <processor type="Sitecore.Ecommerce.Visitor.Pipelines.OrderCreated.NotifyCustomer, Sitecore.Ecommerce.Visitor"/>
      </orderCreated>
      <customerCreated>
        <processor type="Sitecore.Ecommerce.Pipelines.CustomerCreated.ConfigureSecurity, Sitecore.Ecommerce.Kernel"/>
        <processor type="Sitecore.Ecommerce.Pipelines.CustomerCreated.LogIn, Sitecore.Ecommerce.Kernel"/>
        <processor type="Sitecore.Ecommerce.Pipelines.CustomerCreated.SendNotification, Sitecore.Ecommerce.Kernel"/>
      </customerCreated>
      <paymentStarted>
        <processor type="Sitecore.Ecommerce.Pipelines.PaymentStarted.StartPayment, Sitecore.Ecommerce.Kernel"/>
      </paymentStarted>
      <insertRenderings>
        <processor type="Sitecore.Pipelines.InsertRenderings.Processors.GetItem, Sitecore.Kernel">
          <patch:attribute name="type">Sitecore.Ecommerce.Pipelines.InsertRenderings.GetItem, Sitecore.Ecommerce.Kernel</patch:attribute>
        </processor>
      </insertRenderings>
      <getContentEditorFields>
        <processor type="Sitecore.Shell.Applications.ContentEditor.Pipelines.GetContentEditorFields.GetFields, Sitecore.Client" >
          <patch:attribute name="type">Sitecore.Ecommerce.Shell.Applications.ContentEditor.Pipelines.GetContentEditorFields.GetFields, Sitecore.Ecommerce.Shell</patch:attribute>
          <HiddenFields>{81AD5AA7-316C-4F79-9DFF-8FEBFCFBFB4E}|{4423D09D-E95A-4827-B12D-E682BE2DE834}|{39BB71D9-E6B4-4F50-BFAC-1C586724D3B9}|{4200DA93-E824-4FA0-B93B-5F9AB662E3DC}</HiddenFields>
        </processor>
      </getContentEditorFields>
      <orderCaptured>
      </orderCaptured>
    </pipelines>
    <linkManager>
      <providers>
        <add name="sitecore">
          <patch:attribute name="languageEmbedding">always</patch:attribute>
        </add>
      </providers>
    </linkManager>
    <search>
      <configuration>
        <indexes>
          <index id="products" type="Sitecore.Search.Index, Sitecore.Kernel">
            <param desc="name">$(id)</param>
            <param desc="folder">__products</param>
            <Analyzer type="Sitecore.Ecommerce.Search.LuceneAnalyzer, Sitecore.Ecommerce.Kernel" />
            <locations hint="list:AddCrawler">
              <master type="Sitecore.Ecommerce.Search.DatabaseCrawler, Sitecore.Ecommerce.Kernel">
                <Database>master</Database>
                <Root>{0A702337-81CD-45B9-8A72-EC15D2BE1635}</Root>
                <Tags>master products</Tags>
              </master>
              <web type="Sitecore.Ecommerce.Search.DatabaseCrawler, Sitecore.Ecommerce.Kernel">
                <Database>web</Database>
                <Root>{0A702337-81CD-45B9-8A72-EC15D2BE1635}</Root>
                <Tags>web products</Tags>
              </web>
            </locations>
          </index>
        </indexes>
      </configuration>
    </search>
  </sitecore>
</configuration>